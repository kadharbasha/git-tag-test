#!/usr/bin/env groovy

def list = ["dir1", "dir2", "dir3"]
def map = [dir1: "1.0.0", dir2: "2.0.1", dir3: "3.2.1"]

pipeline {
    options {
        buildDiscarder(logRotator(numToKeepStr: '6'))
    }
    agent none
    stages {
        stage('buildparallel'){
            parallel{
                stage('Preparing updated services') {
                    agent any
                    steps {
                        script {
                            for(int i=0; i < list.size(); i++) {
                                matches = sh (
                                        script: "git diff --name-only HEAD~1..HEAD | sort -u | awk -F/ {'print \$2'} | uniq | grep -x ${list[i]} || git diff-tree --no-commit-id --name-only -r HEAD | sort -u | awk -F/ {'print \$2'} | uniq | grep -x ${list[i]}", returnStatus: true
                                    ) == 0
                                if("$matches"!="true"){
                                    stage(list[i] + ' build'){
                                        dir ("services/${list[i]}") {
                                            sh "ls -la"
                                        }
                                    }
                                    stage(list[i] + '  docker push'){
                                        for (element in map) {
                                            sleep(time:5,unit:"SECONDS")
                                            echo "${list[i]} ${element.key} ${element.value}"
                                            sh "docker build -f build/dockerfile -t $element.key:$element.value ."
                                            sh "docker images"
                                            if("${element.key}" == "${list[i]}"){
                                                /*dir ("services/${list[i]}") {
                                                    sh "docker build -f build/dockerfile -t ${element.key}:${element.value} ."
                                                }*/
                                                     echo "inside map"
                                            }
                                        }
                                        dir ("services/${list[i]}") {
                                            sh "docker images"
                                            /*sh "docker build -f build/dockerfile -t $DIR1_ECR_REPOSITORY:$DIR1_IMAGE_TAG ."*/
                                            sh "docker images"
                                        }
                                    }
                                }
                            }
                        }
                    }
                    post{
                        always{
                            cleanWs()
                        }
                    }
                }
            }
        }
    }
}
