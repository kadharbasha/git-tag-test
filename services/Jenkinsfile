#!/usr/bin/env groovy
def DIR1_IMAGE_TAG= "7.18.0"
def DIR1_ECR_REPOSITORY= "test_docker_image"

def list
pipeline {
    options {
        buildDiscarder(logRotator(numToKeepStr: '6'))
    }
    agent none
    stages {
        stage('buildparallel'){
            parallel{
                stage('Preparing updated services') {
                    agent any
                    steps {
                        script {

                            list = ["dir1", "dir2", "dir3"]
                            for(int i=0; i < list.size(); i++) {
                                def tag = "${list[i]}".toString().replaceAll("[^a-zA-Z0-9 ]+","");
                                sh "echo ${tag}_IMAGE_TAG"
                                sh "echo ${DIR1_IMAGE_TAG}"
                                sh "docker build -f build/dockerfile -t 31147669.dkr.ecr.us-east-1.amazonaws.com/ss01-prod-maxapi-${tag}:$DIR1_IMAGE_TAG ."
                                matches = sh (
                                        script: "git diff --name-only HEAD~1..HEAD | sort -u | awk -F/ {'print \$2'} | uniq | grep -x ${list[i]} || git diff-tree --no-commit-id --name-only -r HEAD | sort -u | awk -F/ {'print \$2'} | uniq | grep -x ${list[i]}", returnStatus: true
                                    ) == 0
                                if("$matches"!="false"){
                                    stage(list[i] + ' build'){
                                        echo "$matches"
                                        sh "ls -la"
                                        sh "cd services/${list[i]} && ls -la"
                                        dir ("services/${list[i]}") {
                                            sh "ls -la"
                                        }
                                    }
                                    stage(list[i] + '  docker push'){
                                        echo "$matches"
                                        sh "ls -la"
                                        sh "cd services/${list[i]} && ls -la"
                                        dir ("services/${list[i]}") {
                                            sh "docker images"
                                            sh "docker build -f build/dockerfile -t $DIR1_ECR_REPOSITORY:$DIR1_IMAGE_TAG ."
                                            sh "docker images"
                                        }
                                    }
                                }
                            }
                        }
                    }
                    post{
                        always{
                            cleanWs()
                        }
                    }
                }
            }
        }
    }
}
