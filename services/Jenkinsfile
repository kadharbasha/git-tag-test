#!/usr/bin/env groovy

def list = ["dir1", "dir2", "dir3", "dir4", "dir4v2", "dir5", "dir5v2", "dir6", "dir7"]
def map = [
    dir1: "1.0.0", 
    dir2: "2.0.1", 
    dir3: "3.2.1",
    dir4: "1.2.3",
    dir5: "4.5.6",
    dir6: "7.8.9",
    dir7: "6.8.7",
    dir4v2: "4.2.1",
    dir5v2: "5.2.1"
]
def tagname
def tagnumber
def matches 
def matchesv2
def v2dir
def redir

pipeline {
    options {
        buildDiscarder(logRotator(numToKeepStr: '6'))
    }
    agent none
    stages {
        stage('Preparing updated services') {
            agent any
            steps {
                script {
                    for(int i=0; i < list.size(); i++) {
                        if("${list[i]}"!="dir4v2" && "${list[i]}"!="dir5v2"){
                            matches = sh (
                                script: "git diff --name-only HEAD~1 | sort -u | awk -F/ {'print \$2,\$3'} | uniq | grep -x '${list[i]} build'", returnStatus: true
                            ) == 0
                            echo "Matches: $matches"
                            echo "Service: ${list[i]}"
                            if("$matches"!="false"){
                                stage(list[i] + ' build'){
                                    dir ("services/${list[i]}") {
                                        sh "pwd"
                                        sh "ls -la"
                                    }
                                }
                                //if("${BRANCH_NAME}" == "dev"){
                                    stage(list[i] + '  docker push'){
                                        def noSpec = "${list[i]}".toString().replaceAll("[^a-zA-Z0-9 ]+","")
                                        for (element in map) {
                                            if("${element.key}" == "${noSpec}"){
                                                tagname = "${element.key}"
                                                tagnumber = "${element.value}"
                                                break
                                            }
                                        }
                                        dir ("services/${list[i]}") {
                                            if(("${list[i]}"!="dir6") && ("${list[i]}"!="dir7")) {
                                                echo "Tag Name: ${tagname}"
                                                echo "Tag Number: ${tagnumber}"
                                                sh "pwd"
                                                sh "ls -la"
                                                sh "docker build -f build/dockerfile -t 31147669.dkr.ecr.us-east-1.amazonaws.com/ss01-prod-${tagname}:${tagnumber} ."
                                                sh "docker images"
                                            }
                                            else{
                                                echo "Tag Name: ${tagname}"
                                                echo "Tag Number: ${tagnumber}"
                                                sh "pwd"
                                                sh "ls -la"
                                                sh "docker build -f build/dockerfile -t 31147669.dkr.ecr.us-east-1.amazonaws.com/ss01-prod-maxapi-${tagname}-intel:${tagnumber} ."
                                                sh "docker images"
                                                sh "docker build -f build/dockerfile -t 31147669.dkr.ecr.us-east-1.amazonaws.com/ss01-prod-maxapi-${tagname}-arm32:${tagnumber} ."
                                                sh "docker images"
                                            }
                                        }
                                    }
                                //}
                            }
                        }
                        else{
                            echo "Service: ${list[i]}"
                            redir = "${list[i]}".toString().replaceAll("v2","")
                            echo "service dir of v2: ${redir}"
                            matchesv2 = sh (
                                script: "git diff --name-only HEAD~1 | sort -u | awk -F/ {'print \$2,\$3'} | uniq | grep -x '${redir} v2'", returnStatus: true
                            ) == 0
                            echo "Matchesv2: $matchesv2"
                            v2dir = "${list[i]}".toString().replaceAll("v2","")
                            echo "v2 dir: services/${v2dir}/v2"

                            if("$matchesv2"!="false"){
                                stage(list[i] + ' build'){
                                    script{
                                        dir ("services/${v2dir}"){
                                            sh "pwd"
                                            sh "ls -la"
                                        }
                                    }
                                    dir ("services/${v2dir}/v2"){
                                        sh "pwd"
                                        sh "ls -la"
                                        sh "docker build --add-host=stash.nov.com:10.23.20.22 -f build/dockerfile ."
                                    }
                                }
                                //if("${BRANCH_NAME}" == "dev"){
                                    stage(list[i] + '  docker push'){
                                        def noSpec = "${list[i]}".toString().replaceAll("[^a-zA-Z0-9 ]+","")
                                        for (element in map) {
                                            if("${element.key}" == "${noSpec}"){
                                                tagname = "${element.key}"
                                                tagnumber = "${element.value}"
                                                break
                                            }
                                        }
                                        dir ("services/${v2dir}/v2") {
                                            echo "${tagname}"
                                            echo "${tagnumber}"
                                            sh "pwd"
                                            sh "ls -la"
                                            sh "docker build -f build/dockerfile -t 31147669.dkr.ecr.us-east-1.amazonaws.com/ss01-prod-maxapi-${tagname}-intel:${tagnumber} ."
                                            sh "docker build -f build/dockerfile -t 31147669.dkr.ecr.us-east-1.amazonaws.com/ss01-prod-maxapi-${tagname}-arm32:${tagnumber} ."
                                            sh "docker images"
                                        }
                                    }
                                //}
                            }
                        }
                    }
                }
            }
            post{
                always{
                    cleanWs()
                }
            }
        }        
    }
}