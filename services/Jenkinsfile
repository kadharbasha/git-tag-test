#!/usr/bin/env groovy

def list = ["dir1", "dir2", "dir3", "dir4", "dir5"]
def map = [
    dir1: "1.0.0", 
    dir2: "2.0.1", 
    dir3: "3.2.1",
    dir4: "1.2.3",
    dir5: "4.5.6"
]
def tagname
def tagnumber

def parallelStagesMap = list.collectEntries {
    ["${it}" : generateStage(it)]
}

def generateStage(serv) {
    return {
            matches = sh (
                script: "git diff --name-only HEAD~1..HEAD | sort -u | awk -F/ {'print \$2'} | uniq | grep -x ${serv} || git diff-tree --no-commit-id --name-only -r HEAD | sort -u | awk -F/ {'print \$2'} | uniq | grep -x ${serv}", returnStatus: true
            ) == 0
            if("$matches"!="true"){
                stage("${serv} build"){
                    dir ("services/${serv}") {
                        sh "ls -la"
                        echo "${BRANCH_NAME}"
                    }
            }
            // if("${BRANCH_NAME}" == "dev"){
                stage("serv docker push"){
                    def noSpec = "${serv}".toString().replaceAll("[^a-zA-Z0-9 ]+","")
                    for (element in map) {
                        if("${element.key}" == "${noSpec}"){
                            tagname = "${element.key}"
                            tagnumber = "${element.value}"
                            break
                        }
                    }
                    dir ("services/${serv}") {
                        sh "docker images"
                        if(("${serv}"!="dir4") && ("${serv}"!="dir5")) {
                            echo "not dir4 or dir5"
                            sh "docker build -f build/dockerfile -t 31147669.dkr.ecr.us-east-1.amazonaws.com/ss01-prod-${tagname}:${tagnumber} ."
                            sh "docker images"
                       }
                       else{
                           echo "dir4 or dir5"
                           sh "docker build -f build/dockerfile -t 31147669.dkr.ecr.us-east-1.amazonaws.com/ss01-prod-maxapi-${tagname}-intel:${tagnumber} ."
                           sh "docker images"
                           sh "docker build -f build/dockerfile -t 31147669.dkr.ecr.us-east-1.amazonaws.com/ss01-prod-maxapi-${tagname}-arm32:${tagnumber} ."
                           sh "docker images"
                       }
                    }
                }
           // }
        }
    }
}

pipeline {
    agent any

    stages {
        stage('parallel stage') {
            steps {
                script {
                    parallel parallelStagesMap
                }
            }
        }
    }
}
